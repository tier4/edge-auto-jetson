- name: Get file info from GitHub repository
  ansible.builtin.uri:
    url: "{{ camera_driver_repo }}"
  register: github_api_return_info

- name: Parse download URL for driver
  loop: "{{ github_api_return_info.json.assets }}"
  ansible.builtin.set_fact:
    driver_deb_download_url: "{{ item.browser_download_url }}"
    driver_deb_name: "{{ item.name }}"
  when: item.name | regex_search('tier4-camera-gmsl_(.+)_arm64.deb')

- name: Parse download URL for SDK
  loop: "{{ github_api_return_info.json.assets }}"
  ansible.builtin.set_fact:
    sdk_deb_download_url: "{{ item.browser_download_url }}"
    sdk_deb_name: "{{ item.name }}"
  when: item.name | regex_search('t4cam_sdk-(.+)-rqx58g.deb')

- name: Download driver deb file from public repo
  ansible.builtin.uri:
    url: "{{ driver_deb_download_url }}"
    dest: "{{ camera_driver_download_dir }}/{{ driver_deb_name }}"
    mode: 0644

- name: Download SDK deb file from public repo
  ansible.builtin.uri:
    url: "{{ sdk_deb_download_url }}"
    dest: "{{ camera_driver_download_dir }}/{{ sdk_deb_name }}"
    mode: 0644
  when: sdk_deb_download_url is defined

- name: Install apt packages
  become: true
  ansible.builtin.apt:
    name:
      - make
      - build-essential
      - debhelper
      - debmake
      - devscripts
      - dkms
    update_cache: true

- name: Setup camera driver and SDK
  become: true
  block:
    - name: Install driver from deb file
      ansible.builtin.apt:
        deb: "{{ camera_driver_download_dir }}/{{ driver_deb_name }}"
        state: present
    - name: Post process
      ansible.builtin.shell:
        cmd: |
          /opt/nvidia/jetson-io/config-by-hardware.py -n 2="TIERIV ISX021 GMSL2 Camera Device Tree Overlay"
        # noqa no-changed-when
        # TODO: check dtb file
    - name: Install SDK from deb file
      ansible.builtin.apt:
        deb: "{{ camera_driver_download_dir }}/{{ sdk_deb_name }}"
        state: present
      when: sdk_deb_download_url is defined

- name: Setup C1 configuration
  block:
    - name: Change trigger mode to Fsync mode
      ansible.builtin.include_tasks: mod_or_add.yaml
      vars:
        target_item: trigger_mode
        target_val: "1"
    # Set the same value to min/mid/max exposure time
    # so that exposure time can be estimated under any brightness condition
    - name: Fix exposure time
      block:
        - name: Set min exposure
          ansible.builtin.include_tasks: mod_or_add.yaml
          vars:
            target_item: shutter_time_min
            target_val: "{{ exposure_time }}"
        - name: Set mid exposure
          ansible.builtin.include_tasks: mod_or_add.yaml
          vars:
            target_item: shutter_time_mid
            target_val: "{{ exposure_time }}"
        - name: Set max exposure
          ansible.builtin.include_tasks: mod_or_add.yaml
          vars:
            target_item: shutter_time_max
            target_val: "{{ exposure_time }}"
  vars:
    target_file: /etc/modprobe.d/tier4-isx021.conf
    config_prefix: options tier4_isx021
    block_name: ISX021 configuration

- name: Setup C2 configuration
  block:
    - name: Change trigger mode to Fsync mode
      ansible.builtin.include_tasks: mod_or_add.yaml
      vars:
        target_item: trigger_mode
        target_val: "1"

    # Set the same value to min/mid/max exposure time
    # so that exposure time can be estimated under any brightness condition
    - name: Fix exposure time
      block:
        - name: Set min exposure
          ansible.builtin.include_tasks: mod_or_add.yaml
          vars:
            target_item: shutter_time_min
            target_val: "{{ exposure_time }}"
        - name: Set mid exposure
          ansible.builtin.include_tasks: mod_or_add.yaml
          vars:
            target_item: shutter_time_mid
            target_val: "{{ exposure_time }}"
        - name: Set max exposure
          ansible.builtin.include_tasks: mod_or_add.yaml
          vars:
            target_item: shutter_time_max
            target_val: "{{ exposure_time }}"
  vars:
    target_file: /etc/modprobe.d/tier4-imx490.conf
    config_prefix: options tier4_imx490
    block_name: IMX490 configuration
